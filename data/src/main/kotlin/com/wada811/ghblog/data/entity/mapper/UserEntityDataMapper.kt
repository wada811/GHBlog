package com.wada811.ghblog.data.entity.mapper

import com.wada811.ghblog.data.entity.data.UserEntity
import com.wada811.ghblog.domain.model.User

object UserEntityDataMapper {
    fun toUser(entity: UserEntity) = User(
        entity.access_token,
        entity.login,
        entity.id,
        entity.avatar_url,
        entity.gravatar_id,
        entity.url,
        entity.html_url,
        entity.followers_url,
        entity.following_url,
        entity.gists_url,
        entity.starred_url,
        entity.subscriptions_url,
        entity.organizations_url,
        entity.repos_url,
        entity.events_url,
        entity.received_events_url,
        entity.type,
        entity.site_admin,
        entity.name,
        entity.company,
        entity.blog,
        entity.location,
        entity.email,
        entity.hireable,
        entity.bio,
        entity.public_repos,
        entity.public_gists,
        entity.followers,
        entity.following,
        entity.created_at,
        entity.updated_at,
        entity.total_private_repos,
        entity.owned_private_repos,
        entity.private_gists,
        entity.disk_usage,
        entity.collaborators,
        User.Plan(
            entity.plan_name,
            entity.plan_space,
            entity.plan_private_repos,
            entity.plan_collaborators
        )
    )

    fun fromUser(user: User) = UserEntity(
        user.accessToken,
        user.login,
        user.id,
        user.avatarUrl,
        user.gravatarId,
        user.url,
        user.htmlUrl,
        user.followersUrl,
        user.followingUrl,
        user.gistsUrl,
        user.starredUrl,
        user.subscriptionsUrl,
        user.organizationsUrl,
        user.reposUrl,
        user.eventsUrl,
        user.receivedEventsUrl,
        user.type,
        user.siteAdmin,
        user.name,
        user.company,
        user.blog,
        user.location,
        user.email,
        user.hireable,
        user.bio,
        user.publicRepos,
        user.publicGists,
        user.followers,
        user.following,
        user.createdAt,
        user.updatedAt,
        user.totalPrivateRepos,
        user.ownedPrivateRepos,
        user.privateGists,
        user.diskUsage,
        user.collaborators,
        user.plan.name,
        user.plan.space,
        user.plan.privateRepos,
        user.plan.collaborators
    )
}