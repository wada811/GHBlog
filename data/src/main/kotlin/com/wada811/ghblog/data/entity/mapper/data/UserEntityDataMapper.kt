package com.wada811.ghblog.data.entity.mapper.data

import com.wada811.ghblog.data.entity.data.UserEntity
import com.wada811.ghblog.domain.model.User

object UserEntityDataMapper : EntityDataMapper<UserEntity, User>{
    override fun toEntity(domain: User): UserEntity = UserEntity(
        domain.accessToken,
        domain.login,
        domain.id,
        domain.avatarUrl,
        domain.gravatarId,
        domain.url,
        domain.htmlUrl,
        domain.followersUrl,
        domain.followingUrl,
        domain.gistsUrl,
        domain.starredUrl,
        domain.subscriptionsUrl,
        domain.organizationsUrl,
        domain.reposUrl,
        domain.eventsUrl,
        domain.receivedEventsUrl,
        domain.type,
        domain.siteAdmin,
        domain.name,
        domain.company,
        domain.blog,
        domain.location,
        domain.email,
        domain.hireable,
        domain.bio,
        domain.publicRepos,
        domain.publicGists,
        domain.followers,
        domain.following,
        domain.createdAt,
        domain.updatedAt,
        domain.totalPrivateRepos,
        domain.ownedPrivateRepos,
        domain.privateGists,
        domain.diskUsage,
        domain.collaborators,
        domain.plan.name,
        domain.plan.space,
        domain.plan.privateRepos,
        domain.plan.collaborators
    )

    override fun fromEntity(entity: UserEntity): User = User(
        entity.access_token,
        entity.login,
        entity.id,
        entity.avatar_url,
        entity.gravatar_id,
        entity.url,
        entity.html_url,
        entity.followers_url,
        entity.following_url,
        entity.gists_url,
        entity.starred_url,
        entity.subscriptions_url,
        entity.organizations_url,
        entity.repos_url,
        entity.events_url,
        entity.received_events_url,
        entity.type,
        entity.site_admin,
        entity.name,
        entity.company,
        entity.blog,
        entity.location,
        entity.email,
        entity.hireable,
        entity.bio,
        entity.public_repos,
        entity.public_gists,
        entity.followers,
        entity.following,
        entity.created_at,
        entity.updated_at,
        entity.total_private_repos,
        entity.owned_private_repos,
        entity.private_gists,
        entity.disk_usage,
        entity.collaborators,
        User.Plan(
            entity.plan_name,
            entity.plan_space,
            entity.plan_private_repos,
            entity.plan_collaborators
        )
    )
}