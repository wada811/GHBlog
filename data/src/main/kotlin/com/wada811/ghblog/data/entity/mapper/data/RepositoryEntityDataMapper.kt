package com.wada811.ghblog.data.entity.mapper.data

import com.wada811.ghblog.data.entity.data.RepositoryEntity
import com.wada811.ghblog.domain.model.Owner
import com.wada811.ghblog.domain.model.Permission
import com.wada811.ghblog.domain.model.Repository

object RepositoryEntityDataMapper {
    fun toRepository(entity: RepositoryEntity) = Repository(
        UserEntityDataMapper.toUser(entity.user),
        entity.id,
        entity.name,
        entity.full_name,
        Owner(
            entity.owner_login,
            entity.owner_id,
            entity.owner_avatar_url,
            entity.owner_gravatar_id,
            entity.owner_url,
            entity.owner_html_url,
            entity.owner_followers_url,
            entity.owner_following_url,
            entity.owner_gists_url,
            entity.owner_starred_url,
            entity.owner_subscriptions_url,
            entity.owner_organizations_url,
            entity.owner_repos_url,
            entity.owner_events_url,
            entity.owner_received_events_url,
            entity.owner_type,
            entity.owner_site_admin
        ),
        entity.is_private,
        entity.html_url,
        entity.description,
        entity.fork,
        entity.url,
        entity.forks_url,
        entity.keys_url,
        entity.collaborators_url,
        entity.teams_url,
        entity.hooks_url,
        entity.issue_events_url,
        entity.events_url,
        entity.assignees_url,
        entity.branches_url,
        entity.tags_url,
        entity.blobs_url,
        entity.git_tags_url,
        entity.git_refs_url,
        entity.trees_url,
        entity.statuses_url,
        entity.languages_url,
        entity.stargazers_url,
        entity.contributors_url,
        entity.subscribers_url,
        entity.subscription_url,
        entity.commits_url,
        entity.git_commits_url,
        entity.comments_url,
        entity.issue_comment_url,
        entity.contents_url,
        entity.compare_url,
        entity.merges_url,
        entity.archive_url,
        entity.downloads_url,
        entity.issues_url,
        entity.pulls_url,
        entity.milestones_url,
        entity.notifications_url,
        entity.labels_url,
        entity.releases_url,
        entity.deployments_url,
        entity.created_at,
        entity.updated_at,
        entity.pushed_at,
        entity.git_url,
        entity.ssh_url,
        entity.clone_url,
        entity.svn_url,
        entity.homepage,
        entity.size,
        entity.stargazers_count,
        entity.watchers_count,
        entity.language,
        entity.has_issues,
        entity.has_downloads,
        entity.has_wiki,
        entity.has_pages,
        entity.forks_count,
        entity.mirror_url,
        entity.open_issues_count,
        entity.forks,
        entity.open_issues,
        entity.watchers,
        entity.default_branch,
        Permission(
            entity.permission_admin,
            entity.permission_push,
            entity.permission_pull
        )
    )

    fun fromRepository(repository: Repository) = RepositoryEntity(

        UserEntityDataMapper.fromUser(repository.user),
        repository.id,
        repository.name,
        repository.fullName,
        repository.owner.login,
        repository.owner.id,
        repository.owner.avatarUrl,
        repository.owner.gravatarId,
        repository.owner.url,
        repository.owner.htmlUrl,
        repository.owner.followersUrl,
        repository.owner.followingUrl,
        repository.owner.gistsUrl,
        repository.owner.starredUrl,
        repository.owner.subscriptionsUrl,
        repository.owner.organizationsUrl,
        repository.owner.reposUrl,
        repository.owner.eventsUrl,
        repository.owner.receivedEventsUrl,
        repository.owner.type,
        repository.owner.siteAdmin,
        repository.private,
        repository.htmlUrl,
        repository.description,
        repository.fork,
        repository.url,
        repository.forksUrl,
        repository.keysUrl,
        repository.collaboratorsUrl,
        repository.teamsUrl,
        repository.hooksUrl,
        repository.issueEventsUrl,
        repository.eventsUrl,
        repository.assigneesUrl,
        repository.branchesUrl,
        repository.tagsUrl,
        repository.blobsUrl,
        repository.gitTagsUrl,
        repository.gitRefsUrl,
        repository.treesUrl,
        repository.statusesUrl,
        repository.languagesUrl,
        repository.stargazersUrl,
        repository.contributorsUrl,
        repository.subscribersUrl,
        repository.subscriptionUrl,
        repository.commitsUrl,
        repository.gitCommitsUrl,
        repository.commentsUrl,
        repository.issueCommentUrl,
        repository.contentsUrl,
        repository.compareUrl,
        repository.mergesUrl,
        repository.archiveUrl,
        repository.downloadsUrl,
        repository.issuesUrl,
        repository.pullsUrl,
        repository.milestonesUrl,
        repository.notificationsUrl,
        repository.labelsUrl,
        repository.releasesUrl,
        repository.deploymentsUrl,
        repository.createdAt,
        repository.updatedAt,
        repository.pushedAt,
        repository.gitUrl,
        repository.sshUrl,
        repository.cloneUrl,
        repository.svnUrl,
        repository.homepage,
        repository.size,
        repository.stargazersCount,
        repository.watchersCount,
        repository.language,
        repository.hasIssues,
        repository.hasDownloads,
        repository.hasWiki,
        repository.hasPages,
        repository.forksCount,
        repository.mirrorUrl,
        repository.openIssuesCount,
        repository.forks,
        repository.openIssues,
        repository.watchers,
        repository.defaultBranch,
        repository.permissions.admin,
        repository.permissions.push,
        repository.permissions.pull
    )
}